generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://gab21:ddtank09@cluster0.v8ntxkx.mongodb.net/appbeta"
}

enum OrderStatus {
  PENDENTE
  PREPARANDO
  ENVIADO
  CANCELADO
}

model Product {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  price        Float
  stock        Int
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  availability Boolean         @default(true)
  orders       ProductOrder[]
  categoryId   String?         @db.ObjectId
  category     Category?       @relation(fields: [categoryId], references: [id])
  additions    Addition[]
}

model Order {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  products       ProductOrder[]
  total          Float
  address        String
  paymentMethod  String
  name           String
  phone          String
  status         OrderStatus
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now())
  deliveryMethod String
  neighborhoodId String?
  changeFor      Float?
}

model EntregasBairros {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  value     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model ProductOrder {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  productId   String             @db.ObjectId
  orderId     String             @db.ObjectId
  quantity    Int
  product     Product            @relation(fields: [productId], references: [id])
  order       Order              @relation(fields: [orderId], references: [id])
  additions   ProductOrderAddition[]

  @@unique([productId, orderId])
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product[]
}

model Addition {
  id          String                @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt
  productId   String?               @db.ObjectId
  product     Product?              @relation(fields: [productId], references: [id])
  productOrders ProductOrderAddition[] // Adicionar esta linha
}

model ProductOrderAddition {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  productOrderId String         @db.ObjectId
  additionId     String         @db.ObjectId
  price          Float
  productOrder   ProductOrder   @relation(fields: [productOrderId], references: [id])
  addition       Addition       @relation(fields: [additionId], references: [id])
}