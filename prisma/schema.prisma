generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://gab21:ddtank09@cluster0.v8ntxkx.mongodb.net/appbeta"
}

enum OrderStatus {
  PENDENTE
  PREPARANDO
  ENVIADO
  CANCELADO
}

model Product {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  price        Float
  stock        Int
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  availability Boolean         @default(true)
  orders       ProductOrder[]
  categoryId   String?         @db.ObjectId
  category     Category?       @relation(fields: [categoryId], references: [id])
}

model Order {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  products       ProductOrder[]
  total          Float
  address        String
  paymentMethod  String
  name           String
  phone          String
  status         OrderStatus
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  deliveryMethod String
  neighborhoodId String?
  changeFor      Float?  
         // Novo campo para a quantidade de troco

}

model EntregasBairros {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  value     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model ProductOrder {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  productId   String   @db.ObjectId
  orderId     String   @db.ObjectId
  quantity    Int
  product     Product  @relation(fields: [productId], references: [id])
  order       Order    @relation(fields: [orderId], references: [id])

  @@unique([productId, orderId])
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product[]
}